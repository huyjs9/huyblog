name: Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

on:
  pull_request:
    branches:    
      - master

jobs:
  test:
    name: Cypress tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup node
        uses: actions/setup-node@v3
        timeout-minutes: 5 # See https://github.com/actions/cache/issues/810
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      # - name: Install packages
      #   uses: npm install
      # - name: Testing all pages
      #   id: set-tests
      #   run: |
      #     TESTS_LOG=$(npm run cy:run)
      #     IS_FAIL=0

      #     if [ "$?" -ne 0 ]; then
      #       IS_FAIL=1
      #     fi

      #     echo "$TESTS_LOG"
      #     echo "::set-output name=tests::$IS_FAIL"

  deploy-staging:
    name: Deploy Staging
    runs-on: ubuntu-latest
    if: ${{ needs.setup.outputs['tests'] != '1' }}
    needs:
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup node
        uses: actions/setup-node@v3
        timeout-minutes: 5 # See https://github.com/actions/cache/issues/810
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ env.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ env.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ env.VERCEL_TOKEN }}
